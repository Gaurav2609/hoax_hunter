If you’re a newbie, congratulations on taking the first step on a journey of self-discovery, pain, and lots of learning. If you’re an oldie, welcome back, you masochist you.    In brief, a hackathon, held for a predetermined amount of time, involves tackling a certain problem set by the organizers. A is an experience unlike any other. The closest would be along the lines of doing homework the night before a deadline, except the homework is on fire. And you’re on fire. And everything is on fire.    1. Get your A-team together    A successful team composition, not too unlike a start-up, needs the following roles fulfilled: A successful team composition, not too unlike a start-up, needs the following roles fulfilled:    1. A designer to draw designs/mockups and make things look jazzy.    2. A coder to program the solution and make it snazzy.    3. A business person to pitch and excite the till they’re dizzy.    2. Understand the problem and solution    What you want is a solution that can be feasibly coded up, and the rest hacked up via design shortcuts, e.g., mockups, and reasonably exciting enough a value proposition, which you should be able to articulate easily.    3. Feedback, feedback, feedback    You should be actively getting feedback for your solution at various points. The last thing you want to make is something that people don’t need or something without enough use cases to be compelling enough. Or, even worse, last-minute pivots that will definitely demoralise and set you back to square one.    4. Judge who the judging    Know who your are; understand what they look out for. That’ll help you craft your solution and pitch accordingly. Knowledge is half the battle won – it sets the tone of how you can approach your pitching.    5. Make the pitch your bitch

